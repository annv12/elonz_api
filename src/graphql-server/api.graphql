### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AccountOverview {
  address: String!
  balance: String!
  tokenWorth: String!
}

type AggregatePayload {
  count: Int
}

"""Big integer scalar type"""
scalar BigInt

enum BuyType {
  BNB
  USDT
}

"""The `Decimal` scalar type to represent currency values"""
scalar Decimal

type HolderItem {
  amount: String!
  wallet: String!
}

type IdoOverview {
  nextPrice: String!
  price: String!
  stage: String!
  tokensSold: String!
  usdRaised: String!
}

type Place {
  amount: String!
  place: String!
  wallet: String!
}

type Query {
  accountOverview(wallet: String!): AccountOverview
  holderAggregate: AggregatePayload
  holders(limit: Int, skip: Int): [HolderItem]
  idoOverview: IdoOverview
  myPlace(address: String): Place
  refferalsOverview(address: String!): RefferalsOverview
  transactionAggregate(address: String!): AggregatePayload
  transactions(address: String!, limit: Int, skip: Int): [TransactionItem]
}

type RefferalsOverview {
  balance: String!
  raisedViaRef: String!
  referrals: String!
}

type TransactionItem {
  buyType: BuyType!
  hash: String!
  investedAmount: String!
  price: String!
  receivedAmount: String!
  stage: String!
}